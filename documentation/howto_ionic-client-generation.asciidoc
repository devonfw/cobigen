:toc:
toc::[]

= Ionic client generation

We are going to show you **how to** generate a CRUD Ionic application from an **ETO**
using CobiGen. 

NOTE: This is a short introduction to the Ionic generation. For a deeper tutorial including the generation of the backend, we strongly recommend you to follow link:files/HOW-TO-Devonfw-3.0.0-CobiGen-PoC-E2E_v3.8.pdf[this document].

== Prerequisites

Before starting, make sure you already have in your computer:

- link:https://ionicframework.com/docs/intro/installation/[Ionic]: by following the steps defined on that page.
It includes installing:
** link:https://nodejs.org/en/[NodeJS]: We have to use "NPM" for downloading packages.
** Ionic CLI and Cordova.

If _CobiGen_Templates_ are not already downloaded, follow the next steps:

- Right click on any file of your workspace _CobiGen > Update Templates_ and now you are able to start the generation. 

- If you want to adapt them, click _Adapt Templates_ and you should have the _CobiGen_Templates_ as a new project in Eclipse's workspace.

After following those steps correctly, you should have the latest version of the templates ready to use.

== Generation

We are going to generate the CRUD into a **sample application** that we have developed for 
testing this functionality. It is present on your `workspaces/examples` folder (devon4ng-ionic-application-template). If you do not see it, you can clone or download it from link:https://github.com/devonfw/devon4ng-ionic-application-template[here].

After having that sample app, please create an link:https://github.com/devonfw/devon4ng/wiki/tutorial-newapp[devon4j project] and then start implementing the ETO: You will find an example link:https://github.com/devonfw/devon4j/blob/develop/samples/core/src/main/java/io/devonfw/gastronomy/restaurant/tablemanagement/logic/api/to/TableEto.java[here].

As you can see, `TableEto` contains 3 attributes: 2 of them are `Long` and the third one `TableState` is an enum that you will find 
link:https://github.com/devonfw/devon4j/blob/develop/samples/core/src/main/java/io/devonfw/gastronomy/restaurant/tablemanagement/common/api/datatype/TableState.java[here]. 
The Ionic generation works fine for any Java primitive attribute (Strings, floats, chars, boolean...) and enums. However, if you want to use your own objects, you should 
override the `toString()` method, as explained link:https://stackoverflow.com/questions/35361482/typescript-override-tostring[here]. 

The attributes explained above will be used for generating a page that shows a list. Each item of that list 
will show the values of those attributes. 

For generating the files:

* Right click your ETO file and click on _CobiGen > Generate_ as shown on the figure below.

image::images/howtos/ionic-gen/rightClick.png[Eclipse CobiGen generation,width="500"link="images/howtos/ionic-gen/rightClick.png"]

* Select the Ionic increments for generating as shown below. _Increments group a set of templates for generating
different projects_.
..  **Ionic List** used for generating the page containing the list.
..  **Ionic devon4j URL** is for stating the server path.
..  **Ionic i18n** used for generating the different language translations for the _translationService_ (currently English and Spanish)

image::images/howtos/ionic-gen/wizardCobiGen.png[CobiGen Ionic Wizard,width="500"link="images/howtos/ionic-gen/wizardCobiGen.png"]

NOTE: By default, the generated files will be placed inside "devon4ng-ionic-application-template", next to the root of your project's folder.
See the image below to know where they are generated. For **changing the generation path** and the name of the application go to _CobiGen_Templates/crud_ionic_client_app/cobigen.properties_.

image::images/howtos/ionic-gen/pathOfGeneration.png[Generation path,width="500"link="images/howtos/ionic-gen/pathOfGeneration.png"]

Now that we have generated the files, lets start testing them:

* First change the **server path** of your application. For doing that, modify _src/assets/ServerPath.ts_.

* Check that there are no duplicated imports. Sometimes there are duplicated imports in _src/app/app.module.ts_.
This happens because the merger of CobiGen prefers to duplicate rather than to delete.

* Run ``Ionic serve`` on your console and install the dependencies if needed (``Looks like a fresh checkout! No ./node_modules directory found. Would you like to install the dependencies -> Yes``)

After following all these steps, your application should start. However, remember that you will need your **server** to be running for acessing to the list page.






