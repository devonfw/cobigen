name: CI/CD

on:
  workflow_dispatch:
  push:
    # https://github.community/t/action-does-not-run-on-master-with-tags-ignore-v/128354/4
    branches:
      - '**'
    paths-ignore:
      - 'documentation/**'
      - 'solicitor/**'
      - '**.asciidoc'
    tags-ignore:
      - '**'
  pull_request:
    paths-ignore:
      - 'documentation/**'
      - 'solicitor/**'
      - '**.asciidoc'

# Try fixing random Connection Reset on Maven downloads by '-Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120' as proposed here: https://github.com/actions/virtual-environments/issues/2715#issuecomment-797388909

jobs:
  cache-dependencies:
    runs-on: ubuntu-latest
    steps:      
      - name: Clone Repository
        uses: actions/checkout@v2

      - uses: devonfw-actions/java-maven-setup@v2
        with:
          maven-cache-key: cobigen-dep-${{ hashFiles('**/pom.xml') }}
          clone: false
      
      - name: Resolve non-cobigen dependencies
        run: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.2:resolve -DexcludeGroupIds=com.devonfw.cobigen -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -T1C -P!p2-build -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 || true # never fail
    
  build-and-test-core:
    needs: cache-dependencies
    strategy:
      fail-fast: false
      matrix:
        javaVersion: [8, 11]
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: devonfw-actions/java-maven-setup@v2
        with:
          maven-cache-key: ${{ runner.os }}-${{ matrix.javaVersion }}-maven-${{ github.sha }} # new key will cache
          maven-cache-restore-key: cobigen-dep-${{ hashFiles('**/pom.xml') }}
          java-version: ${{ matrix.javaVersion }}

      - name: Build & Test Core
        shell: bash
        run: |
          mvn install -f cobigen --projects !cobigen-core-systemtest -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120

  build-and-test-plugins:
    needs: build-and-test-core
    strategy:
      fail-fast: false
      matrix:
        javaVersion: [8, 11]
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: devonfw-actions/java-maven-setup@v2
        with:
          maven-cache-key: ${{ runner.os }}-${{ matrix.javaVersion }}-maven-${{ github.sha }}-plugins # new key will cache
          maven-cache-restore-key: ${{ runner.os }}-${{ matrix.javaVersion }}-maven-${{ github.sha }}
          java-version: ${{ matrix.javaVersion }}

      - name: Build & Test Plugins
        shell: bash
        run: |
          mvn install -f cobigen-plugins -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120

  build-plugins-p2:
    needs: build-and-test-plugins
    strategy:
      fail-fast: false
      matrix:
        javaVersion: [8]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: devonfw-actions/java-maven-setup@v2
        with:
          maven-cache-key: ${{ runner.os }}-${{ matrix.javaVersion }}-maven-${{ github.sha }}-plugins # key hit will not update cache
          java-version: ${{ matrix.javaVersion }}

      - name: Cache p2 plugin repositories
        uses: actions/cache@v2
        with:
          path: ./**/target/repository/
          key: p2-plugins-${{ github.sha }} # new key will cache

      - name: Build Plugins UpdateSite
        shell: bash
        run: |
          mvn package -DskipTests -f cobigen-plugins bundle:bundle -Pp2-bundle --projects !cobigen-javaplugin-parent/cobigen-javaplugin-model,!cobigen-openapiplugin-parent/cobigen-openapiplugin-model,!:plugins-parent,!cobigen-javaplugin-parent,!cobigen-openapiplugin-parent,!cobigen-templateengines -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
          mvn install -DskipTests -f cobigen-plugins bundle:bundle -Pp2-bundle p2:site --projects !cobigen-javaplugin-parent/cobigen-javaplugin-model,!cobigen-openapiplugin-parent/cobigen-openapiplugin-model,!:plugins-parent,!cobigen-javaplugin-parent,!cobigen-openapiplugin-parent,!cobigen-templateengines -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120

  run-core-systemtest:
    needs: build-and-test-plugins
    strategy:
      fail-fast: false
      matrix:
        javaVersion: [8, 11]
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: devonfw-actions/java-maven-setup@v2
        with:
          maven-cache-key: ${{ runner.os }}-${{ matrix.javaVersion }}-maven-${{ github.sha }}-plugins # key hit will not update cache
          java-version: ${{ matrix.javaVersion }}

      - name: Run Core Systemtest
        shell: bash
        run: |
          mvn test -f cobigen/cobigen-core-systemtest -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120

  build-and-test-eclipse-plugin:
    needs: build-plugins-p2
    strategy:
      fail-fast: false
      matrix:
        javaVersion: [8, 11]
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: devonfw-actions/java-maven-setup@v2
        with:
          maven-cache-key: ${{ runner.os }}-${{ matrix.javaVersion }}-maven-${{ github.sha }}-plugins # key hit will not update cache
          java-version: ${{ matrix.javaVersion }}
        
      - name: Cache Eclipse repository
        uses: actions/cache@v2
        with:
          path: ./**/eclipse/target/repository/
          key: p2-eclipse-${{ github.sha }} # new key will cache
      
      # After checkout we need to restore the built repositories
      - name: Restore P2 plugins repositories
        uses: actions/cache@v2
        with:
          path: ./**/target/repository/
          key: p2-plugins-${{ github.sha }} # key hit will not update cache

      # There is no retry for jobs, just for steps, so doing the retry by hand
      - name: Build Plugins
        uses: GabrielBB/xvfb-action@v1.5
        with:
          run: mvn install -f cobigen-eclipse -Pp2-build -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dsurefire.rerunFailingTestsCount=2 -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120

  build-and-test-maven-plugin:
    needs: build-and-test-plugins
    strategy:
      fail-fast: false
      matrix:
        javaVersion: [8, 11]
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: devonfw-actions/java-maven-setup@v2
        with:
          maven-cache-key: ${{ runner.os }}-${{ matrix.javaVersion }}-maven-${{ github.sha }}-maven # new key will cache
          maven-cache-restore-key: ${{ runner.os }}-${{ matrix.javaVersion }}-maven-${{ github.sha }}-plugins
          java-version: ${{ matrix.javaVersion }}

      - name: Build & Test Maven Plugin
        shell: bash
        run: |
          mvn install -f cobigen-maven -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120

  build-and-test-cli:
    needs: build-and-test-templates
    strategy:
      fail-fast: false
      matrix:
        javaVersion: [11] # CLI does not support jdk 8 anymore
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: devonfw-actions/java-maven-setup@v2
        with:
          maven-cache-key: ${{ runner.os }}-${{ matrix.javaVersion }}-maven-${{ github.sha }}-cli # new key will cache
          maven-cache-restore-key: ${{ runner.os }}-${{ matrix.javaVersion }}-maven-${{ github.sha }}-templates
          java-version: ${{ matrix.javaVersion }}

      - name: Build & Test CLI
        shell: bash
        run: |
          mvn install -f cobigen-cli -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120

  build-and-test-templates:
    needs: build-and-test-maven-plugin
    strategy:
      fail-fast: false
      matrix:
        javaVersion: [8, 11]
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: devonfw-actions/java-maven-setup@v2
        with:
          maven-cache-key: ${{ runner.os }}-${{ matrix.javaVersion }}-maven-${{ github.sha }}-templates # new key will cache
          maven-cache-restore-key: ${{ runner.os }}-${{ matrix.javaVersion }}-maven-${{ github.sha }}-maven
          java-version: ${{ matrix.javaVersion }}

      - name: Build & Test Templates
        shell: bash
        run: |
          mvn install -f cobigen-templates -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
  
  release:
    needs: [build-and-test-maven-plugin, build-and-test-templates, run-core-systemtest, build-and-test-eclipse-plugin, build-and-test-cli]
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.repository, 'devonfw/') && github.ref == 'refs/heads/master' }}
    continue-on-error: true
    environment:
      name: production
    outputs:
      release_tag: ${{ steps.get_tag.outputs.tagname }}
    steps:
      - uses: devonfw-actions/java-maven-setup@v2
        with:
          maven-cache-key: cobigen-dep-${{ hashFiles('**/pom.xml') }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          BUILD_USER: ${{ secrets.BUILD_USER }}
          BUILD_USER_PASSWD: ${{ secrets.BUILD_USER_PASSWD }}
          BUILD_USER_EMAIL: ${{ secrets.BUILD_USER_EMAIL }}

      - name: Release
        id: release
        shell: bash
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          BUILD_USER: ${{ secrets.BUILD_USER }}
          BUILD_USER_PASSWD: ${{ secrets.BUILD_USER_PASSWD }}
          BUILD_USER_EMAIL: ${{ secrets.BUILD_USER_EMAIL }}
        run: ./release.sh silent skip-qa repo-mvn-settings
          
      - name: 'Get release tag'
        id: get_tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GHA_TOKEN }}"

  github-release:
    needs: release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.repository, 'devonfw/') && github.ref == 'refs/heads/master' && needs.release.outputs.release_tag != '' }}
    steps:
      - uses: devonfw-actions/create-github-release@v1
        with:
          release_tag: ${{ needs.release.outputs.released_tag }}
          GHA_TOKEN: ${{ secrets.GHA_TOKEN }}

