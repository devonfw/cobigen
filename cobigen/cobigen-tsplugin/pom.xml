<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>cobigen-tsplugin</artifactId>
	<name>CobiGen - TypeScript Plug-in</name>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<parent>
		<groupId>com.capgemini</groupId>
		<artifactId>cobigen-parent</artifactId>
		<version>dev-SNAPSHOT</version>
	</parent>

	<properties>
		<skip.deployment>false</skip.deployment>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.capgemini</groupId>
			<artifactId>cobigen-core</artifactId>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.capgemini</groupId>
			<artifactId>cobigen-core-test</artifactId>
			<version>3.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mozilla</groupId>
			<artifactId>rhino</artifactId>
			<version>1.7R4</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Download TSM -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<!-- optional: you don't really need execution ids, but it looks nice 
							in your build log. -->
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<!-- optional: default phase is "generate-resources" -->
						<phase>generate-resources</phase>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<!-- optional: default phase is "generate-resources" -->
						<phase>generate-resources</phase>
						<configuration>
							<!-- optional: The default argument is actually "install", so unless 
								you need to run some other npm command, you can remove this whole <configuration> 
								section. -->
							<arguments>install EastWindShak/tsm</arguments>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<nodeVersion>v4.6.0</nodeVersion>
					<!-- optional: with node version greater than 4.0.0 will use npm provided 
						by node distribution -->
					<!--npmVersion>2.15.9</npmVersion -->
					<!-- optional: where to download node and npm from. Defaults to https://nodejs.org/dist/ -->
					<!--downloadRoot>http://myproxy.example.org/nodejs/</downloadRoot -->
				</configuration>
			</plugin>
			<!-- Zip TSM -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2-beta-5</version>
				<configuration>
					<finalName>tsm</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>src/main/resources/zip.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>process-resources</phase> <!-- append to the compile phase. -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Move tsm.zip from target to src/main/resources -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>src/main/resources</outputDirectory>
							<resources>
								<resource>
									<directory>target</directory>
									<includes>
										<include>tsm.zip</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
