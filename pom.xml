<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.devonfw.cobigen</groupId>
  <artifactId>master-parent</artifactId>
  <version>dev-SNAPSHOT</version>
  <name>CobiGen - Master Parent</name>
  <packaging>pom</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <github.project>devonfw/cobigen</github.project>
    <flatten.mode>ossrh</flatten.mode>
    <slf4j.version>1.7.21</slf4j.version>
    <skip.deployment>true</skip.deployment>
    <java.version>1.8</java.version>
    <tycho.version>1.6.0</tycho.version>
    <bintray.url>https://dl.bintray.com/devonfw</bintray.url>
    <!-- bintray.repository needs to be set by cmd and needs to be one of https://bintray.com/devonfw repositories -->
    <bintray.repository.url>${bintray.url}/${bintray.repository}</bintray.repository.url>
    <p2.repository.build.dir>${project.build.directory}${file.separator}repository</p2.repository.build.dir>
    <p2.repository.upload.dir>${project.build.directory}${file.separator}repository-upload</p2.repository.upload.dir>
    <p2.repository.upload.dir.plugin>${p2.repository.upload.dir}/cobigen-${project.artifactId}</p2.repository.upload.dir.plugin>
    <attach.source.javadoc.build>true</attach.source.javadoc.build>
  </properties>

  <modules>
    <module>cobigen</module>
    <module>cobigen-eclipse</module>
    <module>cobigen-maven</module>
    <module>cobigen-templates</module>
  </modules>

  <url>https://github.com/${github.project}</url>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/${github.project}/issues</url>
  </issueManagement>

  <scm>
    <connection>scm:git:git@github.com:${github.project}.git</connection>
    <developerConnection>scm:git:git@github.com:${github.project}.git</developerConnection>
    <url>git@github.com:${github.project}.git</url>
  </scm>

  <developers>
    <developer>
      <name>Malte Brunnlieb</name>
      <organization>Capgemini</organization>
    </developer>
    <developer>
      <name>Jaime Diaz Gonzalez</name>
      <organization>Capgemini</organization>
    </developer>
  </developers>

  <contributors>
    <contributor>
      <name>Jörg Hohwille</name>
      <organization>Capgemini</organization>
    </contributor>
    <contributor>
      <name>Fabian Kreis</name>
      <organization>Capgemini</organization>
    </contributor>
    <contributor>
      <name>Steffen B. Holzer</name>
      <organization>Capgemini</organization>
    </contributor>
    <contributor>
      <name>Jhonatan Ariel Core</name>
      <organization>Capgemini</organization>
    </contributor>
    <contributor>
      <name>Ruben Diaz Martinez</name>
      <organization>Capgemini</organization>
    </contributor>
    <contributor>
      <name>Simon Röger</name>
      <organization>Capgemini</organization>
    </contributor>
    <contributor>
      <name>Krati Shah</name>
      <organization>Capgemini</organization>
    </contributor>
    <contributor>
      <name>Christian Richter</name>
      <organization>Capgemini</organization>
    </contributor>
    <contributor>
      <name>Erik Grüner</name>
      <organization>Capgemini</organization>
    </contributor>
    <contributor>
      <name>Mike Schumacher</name>
      <organization>Capgemini</organization>
    </contributor>
  </contributors>

  <organization>
    <name>devonfw</name>
    <url>http://devonfw.com/</url>
  </organization>

  <licenses>
    <license>
      <name>Apache Software License 2.0</name>
      <url>https://github.com/devonfw/.github/blob/master/LICENSE</url>
      <distribution>repo</distribution>
      <comments/>
    </license>
  </licenses>

  <dependencies>
    <!-- SLF4j logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
  </dependencies>

  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ftp</artifactId>
        <version>1.0-beta-6</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>${skip.deployment}</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <configuration>
          <skipNexusStagingDeployMojo>${skip.deployment}</skipNexusStagingDeployMojo>
        </configuration>
      </plugin>

      <!-- Flatten POM -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>1.2.2</version>
        <configuration>
          <flattenMode>${flatten.mode}</flattenMode>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.12</version>
        <executions>
          <execution>
            <id>fileToUrl</id>
            <phase>validate</phase>
            <goals>
              <goal>regex-property</goal>
            </goals>
            <configuration>
              <value>${p2.repository.build.dir}</value>
              <regex>\\</regex>
              <replacement>/</replacement>
              <name>p2.repository.build.dir.url</name>
              <failIfNoMatch>false</failIfNoMatch>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-eclipse-plugin</artifactId>
          <version>2.10</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.1.1</version>
          <configuration>
            <!-- needed to fix javadoc on java 11+ -->
            <source>8</source>
            <quiet>true</quiet>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.3</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>wagon-maven-plugin</artifactId>
          <version>1.0-beta-5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.17</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.surefire</groupId>
              <artifactId>surefire-junit47</artifactId>
              <version>2.17</version>
            </dependency>
          </dependencies>
        </plugin>

        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven
          build
          itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[2.8,)</versionRange>
                    <goals>
                      <goal>copy-dependencies</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <versionRange>[1.0.0,)</versionRange>
                    <goals>
                      <goal>flatten</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <versionRange>[1.12,)</versionRange>
                    <goals>
                      <goal>regex-property</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>oss</id>
      <build>
        <plugins>
          <!-- also generate javadoc JARs -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <additionalDependencies>
                <additionalDependency>
                  <groupId>javax.interceptor</groupId>
                  <artifactId>javax.interceptor-api</artifactId>
                  <version>1.2</version>
                </additionalDependency>
              </additionalDependencies>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- Sign artifacts with PGP -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <configuration>
              <keyname>${gpg.keyname}</keyname>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- Leads to wrong execution order of template deployment at the moment -->
<!--           <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.3</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>sonartype.releases</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>false</autoReleaseAfterClose>
            </configuration>
          </plugin> -->
        </plugins>
      </build>
    </profile>
    <profile>
      <activation>
        <property>
          <name>attach.source.javadoc.build</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Bintray update site -->
    <profile>
      <id>p2-upload-bintray</id>
      <activation>
        <property>
          <name>bintray.repository</name>
        </property>
        <file>
          <!-- It is not possible to check for directories. Therefore workaround: check for existing file in folder -->
          <exists>target/repository/artifacts.jar</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <configuration>
              <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
            </configuration>
          </plugin>
          <!-- sets ${qualifiedVersion} for bintray upload -->
          <plugin>
            <groupId>org.eclipse.tycho</groupId>
            <artifactId>tycho-packaging-plugin</artifactId>
            <version>${tycho.version}</version>
            <executions>
              <execution>
                <id>build-qualifier</id>
                <phase>validate</phase>
                <goals>
                  <goal>build-qualifier</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.eclipse.tycho.extras</groupId>
            <artifactId>tycho-p2-extras-plugin</artifactId>
            <version>${tycho.version}</version>
            <executions>
              <execution>
                <id>mirror-files</id>
                <phase>deploy</phase>
                <goals>
                  <goal>mirror</goal>
                </goals>
                <configuration>
                  <source>
                    <repository>
                      <url>file:///${p2.repository.build.dir.url}</url>
                      <layout>p2</layout>
                    </repository>
                  </source>
                  <destination>${p2.repository.upload.dir.plugin}</destination>
                  <xzCompress>false</xzCompress>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>wagon-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>download-temporary-files</id>
                <phase>install</phase>
                <goals>
                  <goal>download</goal>
                </goals>
                <configuration>
                  <url>${bintray.repository.url}</url>
                  <includes>artifacts.jar,content.jar</includes>
                  <toDir>${p2.repository.upload.dir.plugin}</toDir>
                  <serverId>bintray-repo</serverId>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.carrotgarden.maven</groupId>
            <artifactId>bintray-maven-plugin</artifactId>
            <version>1.5.20191113165555</version>
            <configuration>
              <skip>false</skip>
              <subject>devonfw</subject>
              <repository>${bintray.repository}</repository>
              <serverId>bintray-repo</serverId>
              <bintrayVersion>${qualifiedVersion}</bintrayVersion>
              <sourceFolder>${p2.repository.upload.dir.plugin}</sourceFolder>
              <targetFolder>cobigen-${project.artifactId}</targetFolder>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>upload</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- separate eclipse build from command-line... -->
      <id>eclipse</id>
      <activation>
        <property>
          <name>eclipse.application</name>
        </property>
      </activation>
      <build>
        <directory>eclipse-target</directory>
      </build>
    </profile>
  </profiles>

  <distributionManagement>
    <repository>
      <id>sonartype.releases</id>
      <name>Sonartype Releases</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>sonartype.snapshots</id>
      <name>Sonartype Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
    </snapshotRepository>
  </distributionManagement>

  <repositories>
    <repository>
      <id>sonartype.snapshots</id>
      <name>OSSRH Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>
</project>
